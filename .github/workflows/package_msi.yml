name: Build and Package JavaFX App for Windows

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 1: Set up JDK 21 using actions/setup-java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '21'

      # Step 2: Install JavaFX 21 locally in a specified directory
      - name: Install JavaFX 21
        run: |
          # Download JavaFX SDK
          Invoke-WebRequest -Uri https://download2.gluonhq.com/openjfx/23.0.1/openjfx-23.0.1_windows-x64_bin-sdk.zip -OutFile openjfx.zip
          
          # Create a local directory to extract JavaFX
          $javaFXDir = ".\\openjfx"
          New-Item -ItemType Directory -Force -Path $javaFXDir
          
          # Extract JavaFX to the local directory
          Expand-Archive openjfx.zip -DestinationPath $javaFXDir
          Get-ChildItem ".\openjfx\javafx-sdk-23.0.1"

      # Step 3: Build your app with Maven or Gradle
      # For example, use Maven if your project uses it
      - name: Build with Maven
        run: mvn clean package

      # Step 4: Use jpackage to create MSI installer
      - name: Create MSI installer using jpackage
        run: |
          # Set the local JavaFX bin and lib paths
          $javaFXBin = ".\\openjfx\\openjfx-23.0.1\\bin"
          $javaFXLib = ".\\openjfx\\openjfx-23.0.1\\lib"

          # Use jpackage to create the installer
          jpackage --input target `
            --name Pomodazzle `
            --main-jar Pomodazzle-1.0-SNAPSHOT-jar-with-dependencies.jar `
            --main-class com.porfanid.pomodazzle.Pomodazzle `
            --module-path ".\\openjfx\\javafx-sdk-23.0.1\\lib" `
            --add-modules javafx.controls,javafx.fxml,javafx.web `
            --type msi `
            --dest ./package/Pomodazzle `
            --win-dir-chooser `
            --win-menu `
            --win-shortcut `
#            --win-icon ".\\openjfx\\openjfx-23.0.1\\bin\\your-icon.ico"  # Optional: Provide your icon path

      # Step 5: Upload the MSI file as an artifact or release
      - name: Upload MSI to GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: ./package/Pomodazzle/pomodazzle_*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
